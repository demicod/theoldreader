buildscript {
    ext {
        kotlin_version = '1.2.60'
        fuel_version = '1.13.0'
        kotlin_logging_version = '1.5.4'
        junit_version = '4.12'
        slf4j_version = '1.7.25'
        dokka_version = '0.9.17'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

group 'com.github.demicod.theoldreader'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "com.github.kittinunf.fuel:fuel:$fuel_version"
    compile "com.github.kittinunf.fuel:fuel-jackson:$fuel_version"
    compile "io.github.microutils:kotlin-logging:$kotlin_logging_version"

    testCompile "junit:junit:$junit_version"
    testCompile "org.slf4j:slf4j-simple:$slf4j_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Implementation-Title': 'The Old Reader API Library',
                'Implementation-Version': version
    }
    baseName = project.name
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    includeNonPublic = false
}

test.enabled = false
